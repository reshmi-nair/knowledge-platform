{
	"info": {
		"_postman_id": "607f186e-f5e0-4d51-a4c6-02c534d1689c",
		"name": "Publish API",
		"description": "The Content/Collection Publish APIs allow you to publish content/collection on the Sunbird platform. Publish API was previously available as part of learning-service which has now been refactored into content-service.\n\nThe URL for Content Management API(s) is /content/v2/publish and /collection/v1/publish.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pre-requisite",
			"item": [
				{
					"name": "Collection Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.environment.set(\"collection_id\", jsonResponse.result.identifier);",
									"pm.globals.set(\"versionKey\", jsonResponse.result.versionKey);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Sample Collection\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.content-collection\",\n            \"primaryCategory\": \"Digital Textbook\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "TOC Upload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}"
							},
							{
								"key": "x-authenticated-user-token",
								"value": "{{user-token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "fileUrl",
									"value": "https://sunbirddev.blob.core.windows.net/sunbird-content-dev/content/hierarchy/do_113316820811522048194/createtoc.csv",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/collection/v4/import/{{collection_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"collection",
								"v4",
								"import",
								"{{collection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Collection Create wo hierarchy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.environment.set(\"collection_id_wo_hierarchy\", jsonResponse.result.identifier);",
									"pm.globals.set(\"collection_id_wo_hierarchy\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Sample Collection\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.content-collection\",\n            \"primaryCategory\": \"Digital Textbook\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "PDF Content Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"pdf_content_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"artifactUrl\": \"https://sunbirdstagingpublic.blob.core.windows.net/sunbird-content-staging/content/assets/do_2136088747812372481510/samplepdf.pdf\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "PDF Content wo artifactUrl",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"pdf_content_id_wo_artifact\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "MP4 Content Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"mp4_content_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"video/mp4\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"artifactUrl\": \"https://sunbirdstagingpublic.blob.core.windows.net/sunbird-content-staging/content/assets/do_21360643694649344011752/draftversion.mp4\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "MP4 Content Create wo artifactUrl",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"mp4_content_id_wo_artifact\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"video/mp4\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "WEBM Content Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"webm_content_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"video/webm\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"artifactUrl\": \"https://sunbirdstagingpublic.blob.core.windows.net/sunbird-content-staging/content/assets/do_21360604894303027211507/big-buck-bunny_trailer.webm\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "WEBM Content Create wo artifactUrl",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"webm_content_id_wo_artifact\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"video/webm\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "HTML Content Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"html_content_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.html-archive\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"artifactUrl\": \"https://sunbirdstagingpublic.blob.core.windows.net/sunbird-content-staging/content/do_21357841995316428811795/artifact/2.-ekiikrnn-kii-prkrti-output-3_1657521986480_1657522093104.zip\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "HTML Content Create wo artifactUrl",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"html_content_id_wo_artifact\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.html-archive\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "H5P Content Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"h5p_content_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.h5p-archive\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"artifactUrl\": \"https://sunbirdstagingpublic.blob.core.windows.net/sunbird-content-staging/content/do_2136088263163084801476/artifact/1661233685237_do_2136088263163084801476.zip\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "H5P Content Create wo artifactUrl",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"h5p_content_id_wo_artifact\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.h5p-archive\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "ECML Content Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"ecml_content_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.ecml-archive\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"body\": \"{\\\"theme\\\":{\\\"id\\\":\\\"theme\\\",\\\"version\\\":\\\"1.0\\\",\\\"startStage\\\":\\\"463caa09-b78e-412c-ae20-a2776c76b4a0\\\",\\\"stage\\\":[{\\\"x\\\":0,\\\"y\\\":0,\\\"w\\\":100,\\\"h\\\":100,\\\"id\\\":\\\"463caa09-b78e-412c-ae20-a2776c76b4a0\\\",\\\"rotate\\\":null,\\\"config\\\":{\\\"__cdata\\\":\\\"{\\\\\\\"opacity\\\\\\\":100,\\\\\\\"strokeWidth\\\\\\\":1,\\\\\\\"stroke\\\\\\\":\\\\\\\"rgba(255, 255, 255, 0)\\\\\\\",\\\\\\\"autoplay\\\\\\\":false,\\\\\\\"visible\\\\\\\":true,\\\\\\\"color\\\\\\\":\\\\\\\"#FFFFFF\\\\\\\",\\\\\\\"genieControls\\\\\\\":false,\\\\\\\"instructions\\\\\\\":\\\\\\\"\\\\\\\"}\\\"},\\\"manifest\\\":{\\\"media\\\":[]},\\\"shape\\\":[{\\\"type\\\":\\\"ellipse\\\",\\\"x\\\":15,\\\"y\\\":15,\\\"fill\\\":\\\"#00FF00\\\",\\\"w\\\":18,\\\"h\\\":32,\\\"stroke\\\":\\\"rgba(255, 255, 255, 0)\\\",\\\"strokeWidth\\\":1,\\\"opacity\\\":1,\\\"rotate\\\":0,\\\"r\\\":64.8,\\\"z-index\\\":0,\\\"id\\\":\\\"7e35536a-1e50-4ada-872e-416b04da61a0\\\",\\\"config\\\":{\\\"__cdata\\\":\\\"{\\\\\\\"opacity\\\\\\\":100,\\\\\\\"strokeWidth\\\\\\\":1,\\\\\\\"stroke\\\\\\\":\\\\\\\"rgba(255, 255, 255, 0)\\\\\\\",\\\\\\\"autoplay\\\\\\\":false,\\\\\\\"visible\\\\\\\":true,\\\\\\\"color\\\\\\\":\\\\\\\"#00FF00\\\\\\\",\\\\\\\"radius\\\\\\\":64.8}\\\"}}]}],\\\"manifest\\\":{\\\"media\\\":[{\\\"id\\\":\\\"d91cc898-8885-4642-9e55-d16bd502d946\\\",\\\"plugin\\\":\\\"org.ekstep.navigation\\\",\\\"ver\\\":\\\"1.0\\\",\\\"src\\\":\\\"/content-plugins/org.ekstep.navigation-1.0/renderer/controller/navigation_ctrl.js\\\",\\\"type\\\":\\\"js\\\"},{\\\"id\\\":\\\"e02a792e-b75e-4eea-bae0-58666a4ee5c2\\\",\\\"plugin\\\":\\\"org.ekstep.navigation\\\",\\\"ver\\\":\\\"1.0\\\",\\\"src\\\":\\\"/content-plugins/org.ekstep.navigation-1.0/renderer/templates/navigation.html\\\",\\\"type\\\":\\\"js\\\"},{\\\"id\\\":\\\"org.ekstep.navigation\\\",\\\"plugin\\\":\\\"org.ekstep.navigation\\\",\\\"ver\\\":\\\"1.0\\\",\\\"src\\\":\\\"/content-plugins/org.ekstep.navigation-1.0/renderer/plugin.js\\\",\\\"type\\\":\\\"plugin\\\"},{\\\"id\\\":\\\"org.ekstep.navigation_manifest\\\",\\\"plugin\\\":\\\"org.ekstep.navigation\\\",\\\"ver\\\":\\\"1.0\\\",\\\"src\\\":\\\"/content-plugins/org.ekstep.navigation-1.0/manifest.json\\\",\\\"type\\\":\\\"json\\\"}]},\\\"plugin-manifest\\\":{\\\"plugin\\\":[{\\\"id\\\":\\\"org.ekstep.navigation\\\",\\\"ver\\\":\\\"1.0\\\",\\\"type\\\":\\\"plugin\\\",\\\"depends\\\":\\\"\\\"}]},\\\"compatibilityVersion\\\":2}}\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "ECML Content Create invalid body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"ecml_content_id_invalid_body\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.ecml-archive\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"body\": \"dummy\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "ECML Content Create wo body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"ecml_content_id_wo_body\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/vnd.ekstep.ecml-archive\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "EPUB Content Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"epub_content_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/epub\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"artifactUrl\": \"https://sunbirdstagingpublic.blob.core.windows.net/sunbird-content-staging/content/assets/do_2136085231556526081377/faulkner-sound-and-the-fury.epub\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "EPUB Content Create wo artifactUrl",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"epub_content_id_wo_artifact\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/epub\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Youtube Content Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"yt_content_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"video/x-youtube\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"artifactUrl\": \"https://www.youtube.com/watch?v=fkLcI4R7unE\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Youtube Content Create wo artifactUrl",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"yt_content_id_wo_artifact\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"video/x-youtube\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Plugin Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"plugin_id\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"org.ekstep.summary-test\",\n            \"mimeType\": \"application/vnd.ekstep.plugin-archive\",\n            \"primaryCategory\": \"Explanation Content\",\n            \"artifactUrl\": \"https://ntpproductionall.blob.core.windows.net/ntp-content-production/content/org.ekstep.summary/artifact/org.ekstep.summary-1.0-1_1574060894628.zip\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Plugin Create wo artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json()",
									"",
									"//Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"// Set global variable",
									"pm.globals.set(\"plugin_id_wo_artifact\", jsonResponse.result.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
							},
							{
								"key": "X-Authenticated-User-token",
								"value": "{{keycloak_access_token}}",
								"description": "Represents the authorized User ID to execute the API."
							},
							{
								"key": "Authorization",
								"value": "{{kong_api_key}}",
								"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
							},
							{
								"key": "X-Channel-Id",
								"value": "{{channel_id}}",
								"type": "text",
								"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"test-plugin\",\n            \"mimeType\": \"application/vnd.ekstep.plugin-archive\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/content/v4/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"content",
								"v4",
								"create"
							]
						},
						"description": "This API is associated with creating content on the Sunbird Platform. Mandatory fields (name, code, mimeType and primaryCategory) cannot be null or empty.\n\nThe body refers to the format of the request.\n\n*   The body contains metadata about the content to be updated.\n*   Please refer for supported [metadata](https://github.com/project-sunbird/knowledge-platform/blob/master/schemas/content/1.0/schema.json)"
					},
					"response": [
						{
							"name": "Content Create - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:42:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999995"
								},
								{
									"key": "request-time",
									"value": "34"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "40"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "41"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:42:53ZZ\",\n    \"params\": {\n        \"resmsgid\": \"a06bcfc7-23b6-494a-8a63-bbdee8c6e373\",\n        \"msgid\": null,\n        \"err\": null,\n        \"status\": \"successful\",\n        \"errmsg\": null\n    },\n    \"responseCode\": \"OK\",\n    \"result\": {\n        \"identifier\": \"do_21358408067678208014\",\n        \"node_id\": \"do_21358408067678208014\",\n        \"versionKey\": \"1658212973248\"\n    }\n}"
						},
						{
							"name": "Content Create - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"Explanation Content\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:28:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999998"
								},
								{
									"key": "request-time",
									"value": "11"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "13"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "18"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "125"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:28:26ZZ\",\n    \"params\": {\n        \"resmsgid\": \"7efe066b-39e0-4f03-a569-0e9f19e8822b\",\n        \"msgid\": null,\n        \"err\": \"CLIENT_ERROR\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Validation Errors\"\n    },\n    \"responseCode\": \"CLIENT_ERROR\",\n    \"result\": {\n        \"messages\": [\n            \"Required Metadata name not set\"\n        ]\n    }\n}"
						},
						{
							"name": "Content Create - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "The Content Type entity is the media type of the resource.Possible media types can be application/json."
									},
									{
										"key": "X-Authenticated-User-token",
										"value": "{{keycloak_access_token}}",
										"description": "Represents the authorized User ID to execute the API."
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"description": "To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here."
									},
									{
										"key": "X-Channel-Id",
										"value": "{{channel_id}}",
										"type": "text",
										"description": "Represents a physical location (e.g: state) uniquely to which the user belongs."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request\": {\n        \"content\": {\n            \"name\": \"Untitled Content\",\n            \"code\": \"1242e9ea-660a-4536-a142-cc242a7a4162\",\n            \"mimeType\": \"application/pdf\",\n            \"primaryCategory\": \"abcd\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/content/v2/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"content",
										"v2",
										"create"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 19 Jul 2022 06:33:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "X-RateLimit-Limit-hour",
									"value": "1000000"
								},
								{
									"key": "X-RateLimit-Remaining-hour",
									"value": "999997"
								},
								{
									"key": "request-time",
									"value": "16"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "18"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "23"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "115"
								},
								{
									"key": "Via",
									"value": "kong/0.14.1"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"api.content.create\",\n    \"ver\": \"4.0\",\n    \"ts\": \"2022-07-19T06:33:43ZZ\",\n    \"params\": {\n        \"resmsgid\": \"78745a2e-004b-4422-99e4-e2494387b3d4\",\n        \"msgid\": null,\n        \"err\": \"404\",\n        \"status\": \"failed\",\n        \"errmsg\": \"Entry is not found in cassandra for content with identifier: obj-cat:abcd_content_all {}\"\n    },\n    \"responseCode\": \"RESOURCE_NOT_FOUND\",\n    \"result\": {\n        \"messages\": null\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Positive",
			"item": [
				{
					"name": "Content Publish API",
					"item": [
						{
							"name": "Collection Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/{{collection_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"{{collection_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PDF Content Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{pdf_content_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{pdf_content_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MP4 Content Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{mp4_content_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{mp4_content_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "WEBM Content Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{webm_content_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{webm_content_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "HTML Content Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/{{html_content_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"{{html_content_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "H5P Content Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/{{h5p_content_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"{{h5p_content_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "EPUB Content Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/{{epub_content_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"{{epub_content_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ECML Content Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/{{ecml_content_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"{{ecml_content_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Youtube Content Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/{{yt_content_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"{{yt_content_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plugin Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/{{plugin_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"{{plugin_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"let jsonResponse = pm.response.json();",
							"",
							"//Verification",
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200)",
							"});",
							"//code name contains a string",
							"tests[\"Status code name has string OK\"] = responseCode.name.has(\"OK\");",
							"",
							"// pm.test(\"Content-Encoding header is present\", () => {",
							"//   pm.response.to.have.header(\"Content-Encoding\");",
							"// });",
							"// pm.test(\"Content-Encoding header is gzip\", () => {",
							"//   pm.expect(pm.response.headers.get('Content-Encoding')).to.eql('gzip');",
							"// });",
							"",
							"pm.test(\"Verify keys and data type of the params in positive scenario\", () => {",
							"  pm.expect(jsonResponse.params.resmsgid).to.be.a(\"string\");",
							"  pm.expect(jsonResponse.params.msgid).to.be.null;",
							"  pm.expect(jsonResponse.params.err).to.be.null;",
							"  pm.expect(jsonResponse.params.status).to.be.a(\"string\");",
							"  pm.expect(jsonResponse.params.errmsg).to.be.null;",
							"});",
							"",
							"pm.test(\"params.status should be \\\"successful\\\"\", () => {",
							"    pm.expect(jsonResponse.params.status).to.eql(\"successful\");",
							"});",
							"pm.test(\"responseCode should be OK\", () => {",
							"    pm.expect(jsonResponse.responseCode).to.eql(\"OK\");",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Negative",
			"item": [
				{
					"name": "Content Publish API",
					"item": [
						{
							"name": "Invalid Content ID Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/do_dummy_id",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"do_dummy_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid Collection ID Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/do_dummy_id",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"do_dummy_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "PDF Content Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{pdf_content_id_wo_artifact}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{pdf_content_id_wo_artifact}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MP4 Content Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{mp4_content_id_wo_artifact}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{mp4_content_id_wo_artifact}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "WEBM Content Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{webm_content_id_wo_artifact}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{webm_content_id_wo_artifact}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "HTML Content Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{html_content_id_wo_artifact}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{html_content_id_wo_artifact}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "H5P Content Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{h5p_content_id_wo_artifact}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{h5p_content_id_wo_artifact}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "EPUB Content Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{epub_content_id_wo_artifact}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{epub_content_id_wo_artifact}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Youtube Content Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{yt_content_id_wo_artifact}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{yt_content_id_wo_artifact}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plugin Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{plugin_id_wo_artifact}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{plugin_id_wo_artifact}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Collection Publish without hierarchy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws ERR_COLLECTION_REVIEW\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"ERR_COLLECTION_REVIEW\")   ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, 40000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/collection/v4/publish/{{collection_id_wo_hierarchy}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"collection",
										"v4",
										"publish",
										"{{collection_id_wo_hierarchy}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ECML Content Publish wo artifactUrl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"VALIDATOR_ERROR\")   ",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, 2000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{ecml_content_id_wo_body}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{ecml_content_id_wo_body}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ECML Content Publish invalid Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response throws CLIENT_ERROR\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.responseCode).equals(\"CLIENT_ERROR\")",
											"        ",
											"    const params = responseJson.params;",
											"    pm.expect(params.status).equals(\"failed\")",
											"    pm.expect(params.err).equals(\"INVALID_CONTENT_BODY\")   ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, 1000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{kong_api_key}}",
										"type": "text"
									},
									{
										"key": "x-authenticated-user-token",
										"value": "{{keycloak_access_token}}",
										"type": "text"
									},
									{
										"key": "X-Channel-ID",
										"value": "{{channel_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request\": {\n    \"content\": {\n      \"lastPublishedBy\": \"Testing\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/content/v4/publish/{{ecml_content_id_invalid_body}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"content",
										"v4",
										"publish",
										"{{ecml_content_id_invalid_body}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"let jsonResponse = pm.response.json();",
							"",
							"//Verification",
							"// pm.test(\"Content-Encoding header should not present\", () => {",
							"//   pm.response.to.not.have.header(\"Content-Encoding\");",
							"// });",
							"",
							"pm.test(\"Verify keys and data type of the params in negative scenario\", () => {",
							"  pm.expect(jsonResponse.params.resmsgid).to.be.a(\"string\");",
							"  pm.expect(jsonResponse.params.msgid).to.be.null;",
							"  pm.expect(jsonResponse.params.err).to.be.a(\"string\");",
							"  pm.expect(jsonResponse.params.status).to.be.a(\"string\");",
							"  pm.expect(jsonResponse.params.errmsg).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"params.status should be \\\"failed\\\"\", () => {",
							"    pm.expect(jsonResponse.params.status).to.eql(\"failed\");",
							"});",
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Content-Type header is present\", () => {",
					"  pm.response.to.have.header(\"Content-Type\");",
					"});",
					"pm.test(\"Content-Type header is application/json\", () => {",
					"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
					"});",
					"",
					"pm.test(\"Validate keys and data type of the response body\", () => {",
					"  let jsonResponse = pm.response.json();",
					"  pm.expect(jsonResponse).to.be.an(\"object\").that.has.all.keys('id', 'ver', 'ts', 'params', 'responseCode', 'result');",
					"  pm.expect(jsonResponse.id).to.be.a(\"string\");",
					"  pm.expect(jsonResponse.ver).to.be.a(\"string\");",
					"  pm.expect(jsonResponse.ts).to.be.a(\"string\");",
					"  pm.expect(jsonResponse.params).to.be.an(\"object\").that.has.all.keys('resmsgid', 'msgid', 'err', 'status', 'errmsg');",
					"  pm.expect(jsonResponse.responseCode).to.be.a(\"string\");",
					"  pm.expect(jsonResponse.result).to.be.an(\"object\");",
					"});"
				]
			}
		}
	]
}